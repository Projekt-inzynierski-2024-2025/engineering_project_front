@page "/ScheduleMonth"

<link rel="stylesheet" href="css/ScheduleMonth.css">

@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Notifications
@using Syncfusion.Blazor.Buttons
@using engineering_project_front.Models;
@using engineering_project_front.Models.Responses;
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars

<div class="container">
    <h3>Grafik dla zespołu: @TeamName</h3>
    <!-- Dialog do wybierania zespołu -->
    <SfDialog IsModal="true" Width="400px" ShowCloseIcon="false" Visible="@IsTeamDialogVisible" Header="Wybierz zespół" CssClass="sf-dialog">
        <DialogContent>
            <select @bind="SelectedTeamID" class="form-select select">
                <option value="0" disabled selected>Wybierz zespół</option>
                @foreach (var team in Teams)
                {
                    <option value="@team.ID">@team.Name</option>
                }
            </select>
        </DialogContent>
        <DialogButtons>
            <DialogButton Content="Potwierdź" IsPrimary="true" OnClick="ConfirmTeamSelection" />
            <DialogButton Content="Anuluj" OnClick="CloseTeamDialog" />
        </DialogButtons>
    </SfDialog>

    <!-- Sekcja wyboru miesiąca -->
    <div class="control-section">
        <div class="control-wrapper">
            <SfDatePicker TValue="DateTime" Value="@DataChoose" Placeholder="Wybierz miesiąc oraz rok" Format="MMMM yyyy" Start="CalendarView.Year" Depth="CalendarView.Year" ShowClearButton="false" FullScreen="true">
                <DatePickerEvents TValue="DateTime" ValueChange="OnDateChange"></DatePickerEvents>
            </SfDatePicker>
        </div>

        <!-- Przyciski akcji -->
        <div class="control-wrapper">
            <SfButton IsPrimary="true" CssClass="sf-button" @onclick="OpenTeamDialog">Wybierz zespół</SfButton>
            <SfButton IsPrimary="true" CssClass="sf-button" @onclick="AddSchedule" Disabled="@(EditStatus == false)">Stwórz grafik</SfButton>
            <SfButton IsPrimary="true" CssClass="sf-button" @onclick="ChangeScheduleStatus" Disabled="@(HaveTeam == false)" >@(EditStatus ? "Udostępnij pracownikom" : "Edytuj grafik")</SfButton>
        </div>
    </div>


   

    <!-- Tabela godzin -->
    <div class="content-wrapper">
        <div class="row">
            <SfGrid DataSource="Hours" Height="400" GridLines="GridLine.Both" AllowFiltering="true" AllowPaging="true" AllowSorting="true" ContextMenuItems="@(new List<ContextMenuItemModel>() { new ContextMenuItemModel { Text = "Przejdź do grafiku", Target = ".e-content", Id = "seeDetails" } })" CssClass="sf-grid">
                <GridEvents ContextMenuItemClicked="OnContextMenuClick" QueryCellInfo="OnQueryCellInfo" TValue="HoursForDayResponse"></GridEvents>
                <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                <GridPageSettings PageSize="10" PageSizes="@(new string[] { "10", "20", "50", "All" })"></GridPageSettings>
                <GridSortSettings>
                    <GridSortColumns>
                        <GridSortColumn Field="@nameof(HoursForDayResponse.Date)" Direction="SortDirection.Ascending"></GridSortColumn>
                    </GridSortColumns>
                </GridSortSettings>
                <GridColumns>
                    <GridColumn Field="@nameof(HoursForDayResponse.Date)" HeaderText="Dzień pracy" MinWidth="120" Width="150" MaxWidth="200" Format="dd.MM.yyyy"></GridColumn>
                     <GridColumn Field="@nameof(HoursForDayResponse.WorkHours)" HeaderText="Aktualna ilość przepracowanych godzin" MinWidth="120" Width="150" MaxWidth="200">
                        <Template>
                            @{
                                var data = context as HoursForDayResponse;
                                if (data != null)
                                {
                                    <span>@(data.WorkHours == null || data.WorkHours == 0 ? "0" : data.WorkHours.ToString())</span>
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Field="@nameof(HoursForDayResponse.ToDoHours)" HeaderText="Ilość godzin do przepracowania" MinWidth="120" Width="150" MaxWidth="200">
                        <Template>
                            @{
                                var data = context as HoursForDayResponse;
                                if (data != null)
                                {
                                    <span>@(data.ToDoHours == null || data.ToDoHours == 0 ? "0" : data.ToDoHours.ToString())</span>
                                }
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        </div>
    </div>

    <!-- Toast z powiadomieniami -->
    <div>
        <SfToast @ref="Toast" Title="@Title" Content="@Message" Timeout="5000" ShowCloseButton="true" CssClass="sf-toast">
            <ToastPosition X="Right" Y="Bottom"></ToastPosition>
        </SfToast>
    </div>
</div>